웹서버
게임서버
정식 명칭은 아니나 크게 용도로 나누어 부름

웹서버
드물게 정보 요청/갱신
(대략 랭킹 시스템에 사용하는듯)

게임서버
요청/갱신 횟수가 많음
실시간 상호작용 이 필요하다 

멀티쓰레드 이론

운영체재 유저모드, 커널모드
기아현상

캐시
Tempral Locality
Spaclal Locality

MemoryBarrier
코드 재배치 억제
가시성

atomic 원자성 (더이상 나눌수 없는 상태)

멀티스레드에서의 공유 메모리 
다른 코어에서 보았을 때 업데이트 순서가 틀릴 수 있다.
메모리의 내용이 한순간에 업데이트되지 않을 때도 있다.
일반적인 프로그래밍 방식으로는 멀티스레드에서 안정적으로 돌아가는 프로그램을 만들 수 없다.

레이스 컨디션 
동일한 데이터를 서로 다른 여러 스레드들이 접근하는 과정에서 생기는 문제

크리티컬섹션 (임계영역)

//상호배제 
//Monitor.Enter(obj); //해당 함수로 들어오면 다른 스레드에서 접근 불가능
//
     //코드 실행 (현재 스레드에서 변수 접근하여 작업중일때 해당 영역에서 연산할 경우 다른 스레드에서 접근 불가능)
//
//Monitor.End(obj); //해당 함수로 들어오면 다른 스레드에서 접근 가능

데드락(교착상태)

스핀락 중요

Context Switching

통신
1.어플리케이션
웹통신 HTTP
파일 다운로드 FTP
DNS

2.트랜스포트
전송 확인/오류 해결 TCP, UDP

3. 네트워크
네트워크 간 경로 설정
IPv4 , IPv6
관련장치 : 라우터

4. 데이터 링크
네트워크 내 경로 설정
이더넷, PPP
관련장치 : 스위치

5. 피지컬
신호처리
케이블/허브

OSI 7계층 모델 

TCP/IP 모델

도메인 (www.naver.com)
라우터 (IP)
스위치 (MAC Address)



c# 
try
finally